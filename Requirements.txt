# =========================================================
# Requirements for Task 1 Soil Type Classification Project
# =========================================================

# Core Data Manipulation Libraries
pandas==1.5.3         # For data manipulation and analysis
numpy==1.24.3         # For numerical operations and arrays

# Visualization Libraries
matplotlib==3.7.1     # For creating static visualizations and plots
seaborn==0.12.2       # For statistical graphics built on matplotlib

# Machine Learning & Preprocessing
scikit-learn==1.2.2   # Core machine learning library (RandomForest, train-test split, metrics, etc.)
joblib==1.3.2         # For saving and loading trained models efficiently

# Optional: Useful for Tree-Based Model Explanation (can be used to explain Random Forests)
xgboost==1.7.6        # Alternative gradient boosting model (optional, for experimentation)
shap==0.41.0          # SHAP values for model interpretability (optional but useful)

# Environment and Runtime Utilities
jupyter==1.0.0        # Jupyter notebook interface to run and test code
notebook==6.5.4       # Required if running notebooks from terminal

# Utility for suppressing warnings (used in notebook)
# Not explicitly needed in requirements but used in code warnings

# ==========================
# Requirements for Task 2 
# ==========================

# Data Handling
pandas==1.5.3         # For structured data manipulation
numpy==1.24.3         # For numerical computing

# Visualization
matplotlib==3.7.1     # Plotting and data visualization
seaborn==0.12.2       # High-level visualization based on matplotlib

# Machine Learning
scikit-learn==1.2.2   # ML algorithms and preprocessing tools
joblib==1.3.2         # Save/load trained models

# Environment
jupyter==1.0.0        # Jupyter front-end
notebook==6.5.4       # Required to run .ipynb notebooks in browser

# Optional: For enhanced model performance evaluation and interpretability
xgboost==1.7.6        # Gradient boosting model (optional)
shap==0.41.0          # Model interpretability using SHAP values (optional)



